{
    "swagger": "2.0",
    "info": {
        "title": "Stonehenge API",
        "contact": {
            "name": "Igor Reis (@eakeur)",
            "email": "igor.reisleandro@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/accounts": {
            "get": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "List all accounts that match the given filter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account owner name",
                        "name": "owner_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema.AccountListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates an account with values specified on body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates account",
                "parameters": [
                    {
                        "description": "Account info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schema.CreateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/accounts/{accountID}/balance": {
            "get": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "Gets the balance of the account specified, if it's the logged in account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.GetBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Authenticates an account with its credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Authenticates account",
                "parameters": [
                    {
                        "description": "Account info",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.AuthenticationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schema.AuthenticationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transfers": {
            "get": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "List all transfers that match the given filter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "List transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account origin id",
                        "name": "originID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account destination id",
                        "name": "destinationID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Initial date",
                        "name": "made_since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Final date",
                        "name": "made_until",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema.ListTransferResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthKey": []
                    }
                ],
                "description": "Creates a transfer with values specified on body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Creates transfer",
                "parameters": [
                    {
                        "description": "Transfer info",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.CreateTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schema.CreateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is a unique identifier of this error",
                    "type": "string"
                },
                "message": {
                    "description": "Message is a description of this error context",
                    "type": "string"
                }
            }
        },
        "schema.AccountListResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "owner_name": {
                    "type": "string"
                }
            }
        },
        "schema.AuthenticationRequest": {
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "Document is the CPF of the applicant. Must be numbers only",
                    "type": "string",
                    "example": "23100299900"
                },
                "secret": {
                    "description": "Secret is the password of the account the applicant wants to authenticate to",
                    "type": "string"
                }
            }
        },
        "schema.AuthenticationResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "schema.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "Document is the applicant's CPF. Must be numbers only",
                    "type": "string",
                    "example": "23100299900"
                },
                "name": {
                    "description": "Name is the applicant's full name",
                    "type": "string",
                    "example": "Alan Turing"
                },
                "secret": {
                    "description": "Secret is the account's password. It will be used to authenticate afterwards",
                    "type": "string"
                }
            }
        },
        "schema.CreateAccountResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "AccountID is the id generated that represents this account",
                    "type": "string"
                },
                "token": {
                    "description": "Token is a JWT token containing claims about the logged in account owner",
                    "type": "string"
                }
            }
        },
        "schema.CreateTransferRequest": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "description": "DestinationID is the ID of the transfer that wil receive the money",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "amount": {
                    "description": "Amount is the quantity that is going to be attempted to transfer",
                    "type": "number",
                    "example": 15.99
                }
            }
        },
        "schema.CreateTransferResponse": {
            "type": "object",
            "properties": {
                "remaining_balance": {
                    "description": "RemainingBalance is how much budget the logged-in user still has after the transfer occurred",
                    "type": "number"
                },
                "transfer_id": {
                    "description": "TransferID is the generated id that represents this transfer",
                    "type": "string"
                }
            }
        },
        "schema.GetBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                }
            }
        },
        "schema.ListTransferResponse": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "type": "string"
                },
                "account_origin_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "effective_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}